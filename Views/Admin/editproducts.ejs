

<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Add Product form</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.css">
  <link rel="shortcut icon" type="image/png" href="../Assets/images/logos/favicon.png" />
  <link rel="stylesheet" href="/Assets/css/styles.min.css" />
</head>

<body>
  <!--  Body Wrapper -->
  <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
    data-sidebar-position="fixed" data-header-position="fixed">
    <!-- Sidebar Start -->
    <%- include('./includes/sideMenu.ejs')%>

    <!--  Sidebar End -->
    <!--  Main wrapper -->
    <div class="body-wrapper">
      <!--  Header Start -->
      <header class="app-header">
        <nav class="navbar navbar-expand-lg navbar-light">
          <ul class="navbar-nav">
            <li class="nav-item d-block d-xl-none">
              <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                <i class="ti ti-menu-2"></i>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link nav-icon-hover" href="javascript:void(0)">
                <i class="ti ti-bell-ringing"></i>
                <div class="notification bg-primary rounded-circle"></div>
              </a>
            </li>
          </ul>
          <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
            <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
              <li class="nav-item dropdown">
                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                  aria-expanded="false">
                  <img src="../Assets/images/profile/user-1.jpg" alt="" width="35" height="35" class="rounded-circle">
                </a>
                <div class="dropdown-menu dropdown-menu-end dropdown-menu-animate-up" aria-labelledby="drop2">
                  <div class="message-body">
                    <a href="javascript:void(0)" class="d-flex align-items-center gap-2 dropdown-item">
                      <i class="ti ti-user fs-6"></i>
                      <p class="mb-0 fs-3">My Profile</p>
                    </a>
                    <a href="javascript:void(0)" class="d-flex align-items-center gap-2 dropdown-item">
                      <i class="ti ti-mail fs-6"></i>
                      <p class="mb-0 fs-3">My Account</p>
                    </a>
                    <a href="javascript:void(0)" class="d-flex align-items-center gap-2 dropdown-item">
                      <i class="ti ti-list-check fs-6"></i>
                      <p class="mb-0 fs-3">My Task</p>
                    </a>
                    <a href="./authentication-login.html" class="btn btn-outline-primary mx-3 mt-2 d-block">Logout</a>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </nav>
      </header>
      <!--  Header End -->
<!-- ===========Start of Catogory card=================================================================================================================== -->


<div class="card py-5">
    <div class="card-body">
        <h5 class="card-title fw-semibold mb-4">Edit Product</h5>
        <form action="/admin/proceedtoeditproduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
            <% product.images.forEach(image => { %>
                <input type="hidden" name="existingImages[]" value="<%= image %>">
             <%});%>
            <div class="mb-3">
                <label for="productName" class="form-label">Product Name</label>
                <input type="text" class="form-control" id="productName" name="name" value="<%= product.name %>" required  maxlength="50">
            </div>
            <div class="mb-3">
                <label for="productDescription" class="form-label">Product Description</label>
                <textarea class="form-control" id="productDescription" name="description" required><%= product.description %></textarea>
            </div>
            <div class="mb-3">
                <label for="productPrice" class="form-label">Product Price</label>
                <input type="number" class="form-control" id="productPrice" name="price" value="<%= product.price %>" required min="0" >
                <span id="priceError" style="color: red;"></span>
            </div>
            <div class="mb-3">
                <label for="offerPrice" class="form-label">Product offer Price</label>
                <input type="number" class="form-control" id="offerprice" name="offerprice" value="<%= product.offerprice %>" required  min="0" >
                <span id="offerPriceError" style="color: red;"></span>
            </div>
            <div class="mb-3">
                <label for="offerPrice" class="form-label">stock</label>
                <input type="number" class="form-control" id="stock" name="stock" value="<%= product.stock %>" required>
            </div>
            <div class="mb-3">
                <label for="productCategory" class="form-label">Product Category</label>
                <select class="form-select" id="productCategory" name="category" required>
                    <% categories.forEach(category => { %>
                      <option value="<%= category._id %>" <%= product.category && product.category.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name%></option>
                    <% }); %>
                </select>
            </div>
            <!-- <div class="mb-3">
                <label for="productImages" class="form-label">Product Images</label>
                <input type="file" class="form-control" id="productImages" name="images" multiple>
            </div> -->
            <hr class="mb-4 mt-0">
                           

            <div class="col-lg-6">
                <div class="card mb-4">
                  <div class="card-header">
                    <h4>Media</h4>
                  </div>
                  <div class="input-upload">
                    <img src="/imgs/theme/upload.svg" id="imgView1" alt="">
                    <input class="form-control" id="input1" name="images" onchange="viewImage1(event),viewImage(event, 1)" type="file">
                  </div>
                  <div class="image-cropper" style="display:none;">
                    <img src="" id="croppedImg1" alt="">
                    <button type="button" id="saveButton1" class="btn btn-primary">Save</button>
                  </div>
      
                </div> <!-- card end// -->
              </div>
              <div class="col-lg-6">
                <div class="card mb-4">
                  <div class="card-header">
                    <h4>Media</h4>
                  </div>
                  <div class="input-upload">
                    <img src="/imgs/theme/upload.svg" id="imgView2" alt="">
                    <input class="form-control" id="input2" name="images" onchange="viewImage2(event),viewImage(event, 2)" type="file">
                  </div>
                  <div class="image-cropper" style="display:none;">
                    <img src="" id="croppedImg2" alt="">
                    <button type="button" id="saveButton2" class="btn  btn-primary">Save</button>
                  </div>
      
                </div> <!-- card end// -->
              </div>
              <div class="col-lg-6">
                <div class="card mb-4">
                  <div class="card-header">
                    <h4>Media</h4>
                  </div>
                  <div class="input-upload">
                    <img src="/imgs/theme/upload.svg" id="imgView3" alt="">
                    <input class="form-control" id="input3" name="images" onchange="viewImage3(event),viewImage(event, 3)" type="file">
                  </div>
                  <div class="image-cropper" style="display:none;">
                    <img src="" id="croppedImg3" alt="">
                    <button type="button" id="saveButton3" class="btn  btn-primary">Save</button>
                  </div>
                  <br>
                  <h5>Existing Images</h5>
                  

                </div>
                <div id="imagePreview" class="row">
                  <% product.images.forEach(image => { %>
                    <div class="col-md-3 mb-3"> <!-- Adjust the column width as needed -->
                      <div class="img-container">
                        <img class="img-preview img-fluid" src="/admin/images/<%= image %>">
                        
                      </div>
                      <label>
                        <input type="checkbox" name="removedImages" value="<%= image %>"> Remove
                      </label>
                    </div>
                    
                  <% }); %>
                </div>
                
                 
                
        
           
               <div>
                <input  class="btn btn-primary" value="SUBMIT" type="submit"></input>
            </div>
        </form>
    </div>
</div>
</div>
</div>

 <script>
     function viewImage1(event) {
 document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
}

function viewImage2(event) {
 document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event) {
 document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
}
 </script>
 <script>
 function viewImage(event, index) {
     let input = event.target;
     let reader = new FileReader();
 
     reader.onload = function() {
       let dataURL = reader.result;
       let image = document.getElementById('imgView' + index);
       image.src = dataURL;

       
 
       // Initialize Cropper.js on the image
       let cropper = new Cropper(image, {  
         aspectRatio: 1 / 1, // Set the aspect ratio to 1:1 for square images
         viewMode: 1, // Set the view mode to crop box
         guides: true, // Show the crop guides
         background: false, // Do not show the background behind the image
         autoCropArea: 1, // Set the initial crop area to cover the whole image
         zoomable: true // Disable zooming to keep the image size fixed
       });
 
       // Show the image cropper container
       let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
       cropperContainer.style.display = 'block';
 
       // Update the cropped image when the "Save" button is clicked
       let saveButton = document.querySelector('#saveButton' + index);
       saveButton.addEventListener('click', async function() {
         let croppedCanvas = cropper.getCroppedCanvas({
           width: 500, 
           height: 500 
         });
         let croppedImage = document.getElementById("croppedImg" + index);
         croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
 
         // Generate a unique name for the cropped image file based on the current timestamp
         let timestamp = new Date().getTime();
         let fileName = `cropped-img-${timestamp}-${index}.png`;
 
         await croppedCanvas.toBlob(blob => {
           let input = document.getElementById('input' + index)
           let imgFile = new File([blob], fileName, blob)
           const fileList = new DataTransfer();
           fileList.items.add(imgFile);
           input.files = fileList.files
         });
         // cropperContainer.style.display = 'none';
       });
 
     };
 
     reader.readAsDataURL(input.files[0]);
   }
 </script>





<style>.image-row {
  display: flex;
  gap: 10px; /* Adjust the gap between images as needed */
}

.img-container {
  flex: 1;
}

.img-thumbnail {
  max-width: 100%;
  height: auto;
  border: 1px solid #ccc;
  border-radius: 5px;
}
</style>

<script>

function validateNonNegativeInput(inputElement) {
   console.log("Input event triggered");
    const value = parseFloat(inputElement.value);
    const errorElementId = inputElement.id + "Error";
    const errorElement = document.getElementById(errorElementId);

    if (isNaN(value) || value < 0) {
        errorElement.textContent = "Value cannot be negative.";
    } else {
        errorElement.textContent = "";
    }
}

</script>

<!-- ===================================================================================================================================== -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.js"></script>


<script src="../Assets/libs/jquery/dist/jquery.min.js"></script>
  <script src="../Assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
  <script src="../Assets/js/sidebarmenu.js"></script>
  <script src="../Assets/js/app.min.js"></script>
  <script src="../Assets/libs/simplebar/dist/simplebar.js"></script>
</body>

</html>